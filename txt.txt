import React, { useState, useEffect } from 'react';
import './ServiceList.css';
// import axios from "../../../../axios/axiosConfig"

const ServiceList = () => {
    const [newService, setNewService] = useState({ service_name: '', service_description: '' });
    const [services, setServices] = useState([]);

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setNewService({ ...newService, [name]: value });
    };
    useEffect(() => {
        fetch('/services')
            .then(res => res.json())
            .then(data => setServices(data));
    }, []);

    const handleDelete = (id) => {
        fetch(/services/${id}, { method: 'DELETE' })
            .then(() => setServices(services.filter(service => service.id !== id)));
    };

    const handleEdit = (id) => {
        // Handle the editing logic here
        // This is a placeholder for where you'd include the edit functionality
        // console.log(Edit service with id ${id});
    };

    // const handleAddService = () => {
    //     fetch('/api/service', {
    //         method: 'POST',
    //         headers: { 'Content-Type': 'application/json' },
    //         body: JSON.stringify(newService),
    //     })
    //         .then(res => res.json())
    //         .then(service => {
    //             setServices([...services, service]);
    //             setNewService({ name: '', description: '' });
    //             alert("loging successful")
    //         }
    //     )};


        async function handleAddService(e) {
            e.preventDefault();
        
            try {
                
                const response = await fetch("http://localhost:3000/api/service", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(newService)
                });
        
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
        
                const service = await response.json();
        setServices([...services, service]);
        setNewService({ service_name: '', service_description: '' });
        alert("Service added successfully");
              
            } catch (error) {
                alert("Something went wrong");
                console.log(error);
            } 
        }
    
        

    return (
        <div className="service-management">
            <div className='service-provide'>
                <h1>Services we provide</h1>
            </div>
        
            <p className="description">
                Bring to the table win-win survival strategies to ensure proactive domination. At the end of the day, going forward,
                a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution.
            </p>
            <div className="services-list">
                {services.map((service) => (
                <div key={service.id} className="service-item">
                    <div className="service-details">
                    <h3>{service.name}</h3>
                    <p>{service.description}</p>
                    </div>
                    <div className="service-actions">
                    <button onClick={() => handleEdit(service.id)}> <input type="checkbox" /></button>
                    <button onClick={() => handleDelete(service.id)}>ðŸ—‘</button>
                    </div>
                </div>
                ))}
            </div>
            <section className='add-new-service-container'>
                <div className='add-new-service'>
                    <h2>Add a new service</h2>
                </div>
                <div className="add-service-form">
                <form onSubmit={handleAddService}>
            <input
                type="text"
                name="service_name"
                value={newService.service_name}
                onChange={handleInputChange}
                placeholder="Service Name"
                required
            />
            <input
                type="text"
                name="service_description"
                value={newService.service_description}
                onChange={handleInputChange}
                placeholder="Service Description"
                required
            />
            <button type="submit">Add Service</button>
        </form>
                </div>
            </section>
        </div>
    );
};

export default ServiceList;